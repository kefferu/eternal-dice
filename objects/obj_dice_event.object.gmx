<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dice</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set the dice unmotion
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///execute the event
switch (global.eventType)
{
    case "rec" :
        audio_play_sound(SE_health_up,0,false);
        global.baseHp += global.totalDice;
        break;
    case "pos_buff" :
        audio_play_sound(SE_power_up,0,false);
        randomize();
        for (buff_index = 0; buff_index &lt; 3 ; buff_index++)
        {
            if global.buffArray[buff_index] == 0
            {
                global.buffArray[buff_index] = round(random_range(1,3));
                global.buffNotif = global.buffArray[buff_index];
                global.buffTurn[buff_index] = global.totalDice;
                global.buffTurnNotif = global.totalDice;
                global.buffStatusJustGet[buff_index] = true;
                break;
            }
        }
        break;
        case "neg_buff" :
        audio_play_sound(SE_neg_buff,0,false);
        randomize();
        for (buff_index = 0; buff_index &lt; 3 ; buff_index++)
        {
            if global.buffArray[buff_index] == 0
            {
                global.buffArray[buff_index] = round(random_range(4,6));
                global.buffNotif = global.buffArray[buff_index];
                global.buffTurn[buff_index] = global.totalDice;
                global.buffTurnNotif = global.totalDice;
                global.buffStatusJustGet[buff_index] = true;
                break;
            }
        }
        break;
    default : break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///end the event
instance_destroy(obj_panel);
instance_destroy(obj_dice_event);
if instance_exists(obj_double_dice_event)
{
    instance_destroy(obj_double_dice_event);
}
instance_destroy(obj_btn_roll_event);
instance_activate_object(obj_roll);
instance_activate_object(obj_btn_item);
minus_buff_turn();
global.checkStatus = true;

//draw the notif
global.drawNotif = true;
switch (global.eventType)
{
    case "rec" :
        global.drawNotifText = "Recover " + string(global.totalDice) + " HP";
        break;
    case "pos_buff" :
        global.drawNotifText = "Got " + get_string_buff_notif(global.buffNotif) + " for " + string(global.buffTurnNotif) + " turn";
        break;
    case "neg_buff" :
        global.drawNotifText = "Got " + get_string_buff_notif(global.buffNotif) + " for " + string(global.buffTurnNotif) + " turn";
        break;
    default : break;
}
global.dice = 0;
global.secondDice = 0;
global.totalDice = 0;
global.doubleDice = false;
obj_roll.visible = true;
global.textingEvent = false;
global.texting = "";

//set it draw for 40 steps
obj_control_draw_notif.alarm[0] = 40;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop the dice
image_speed = 0;
image_index = global.dice - 1;
alarm[3] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///slow the dice again
image_speed = 0.5;
alarm[2] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///slow the dice
image_speed = 1;
alarm[1] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
